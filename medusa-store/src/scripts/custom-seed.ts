import "reflect-metadata";
import { DataSource } from "typeorm";
const json = require("./product_category.json");
import {
  Currency,
  Store,
  Image,
  ProductOption,
  ProductOptionValue,
  Product,
  ProductVariant,
  PriceList,
  MoneyAmount,
  CustomerGroup,
  Item,
  Cart,
  Order,
  Customer,
  Return,
  Swap,
  ReturnItem,
  Address,
  LineItem,
  ReturnReason,
  ClaimOrder,
  ClaimItem,
  ClaimImage,
  ClaimTag,
  ShippingMethod,
  ShippingOption,
  Region,
  ShippingProfile,
  PaymentProvider,
  TaxProvider,
  FulfillmentProvider,
  ShippingOptionRequirement,
  LineItemTaxLine,
  ShippingMethodTaxLine,
  Fulfillment,
  FulfillmentItem,
  FulfillmentOption,
  Payment,
  TrackingLink,
  LineItemAdjustment,
  Discount,
  DiscountRule,
  DiscountCondition,
  ProductType,
  ProductTag,
  ProductCategory,
  ProductCollection,
  OrderEdit,
  OrderItemChange,
  PaymentCollection,
  GiftCard,
  PaymentSession,
  Refund,
  DraftOrder,
  GiftCardTransaction,
  ProductVariantInventoryItem,
  TaxRate,
  Country,
} from "@medusajs/medusa";

const AppDataSource = new DataSource({
  type: "postgres",
  host: process.env.DATABASE_HOST,
  port: 5432,
  database: "medusa-store-update",
  entities: [
    Product,
    Store,
    Currency,
    ProductVariant,
    Image,
    ProductOption,
    ProductOptionValue,
    MoneyAmount,
    PriceList,
    CustomerGroup,
    Customer,
    Address,
    Swap,
    Return,
    ReturnItem,
    Cart,
    LineItem,
    Order,
    Item,
    ReturnReason,
    ClaimOrder,
    ClaimItem,
    ClaimImage,
    ClaimTag,
    ShippingMethod,
    ShippingOption,
    Region,
    ShippingProfile,
    PaymentProvider,
    TaxProvider,
    FulfillmentProvider,
    ShippingOptionRequirement,
    LineItemTaxLine,
    ShippingMethodTaxLine,
    Fulfillment,
    FulfillmentItem,
    FulfillmentOption,
    Payment,
    TrackingLink,
    LineItemAdjustment,
    Discount,
    DiscountRule,
    DiscountCondition,
    ProductType,
    ProductTag,
    ProductCategory,
    ProductCollection,
    OrderEdit,
    OrderItemChange,
    PaymentCollection,
    GiftCard,
    PaymentSession,
    Refund,
    DraftOrder,
    GiftCardTransaction,
    ProductVariantInventoryItem,
    TaxRate,
    Country,
    ProductCategory,
  ],
  synchronize: false,
  logging: false,
});
